<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADjGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAGapJ
        REFUeNrt3dmPZOd93vHve05tXdX73rNxNg7FVUNLQ0kJJDJyKBuQkegyViAgcOILQ7AcX/ofiO6U2HEg
        xDEN+CJwJBiBdKELG0IsxYlphRZF0aRIcYYczsJZepneaj/nvL9cnKqeIdnT02stPc8H6GFzpqvq9Kn3
        fc671XtARERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERETkYeV64SB+90++hjfIhOAwcD1xWL3H0nPjLcRh/OG/+3OdE+nfAPjG
        n34VMAIXgnNYYnkcQ86RAxfo7flQ7fdmNB1uHWcNcHgSHI4//Lf/XadH+icAfv/bv4XPNcAceVeiSeWE
        4b7k4AXgE8AEkNHb8yExsAS8bfAjh/11xuevRq4OgRE0CvzH3/kznSXp7QD4/W//FkmhhktCMFdyzn4T
        574OPKVKv6MweAOzPzazv8C5qoUJYX1AISA70vFmts810sqPG3cB38S5PwLOq/LvSAY4j3P/2QXum+DG
        nQ/w+brOjOxIR1sA3/jTr+II0it/wH8Avg6E9/6MmWGY3plN3yyH+/gAaQL8F/PJH+BcFYfGBGTbOnzV
        tXaf/zfB/Xa78nvzRElEksR4n+DN653ZROACgiAkDDNkwyxBOk4aAr/tXPB6xvIvNV1NJ0q2rWMtgN/9
        k68RhgZwAtz3gfOG0YybNKM6iU/0buxAGITksgVymRwufRtfA/uXwFWaxn/6HbUC5ME6NgbgjXSqD/cl
        4Ckzo96sUW9UVfl3IfEJ9UaVerOGmQE8ZbgvEThI1IWSHguATAiWWN7BC4Zl6lGNRlRXf38PDKMR1alH
        NQzLOHieyOfJawmF9FgAOAwXMAR8IoqbNKOGzv4+aUYNorgJ8LiFwZAFWkkpPRYAOIcjyHmfTDSihq78
        +6jdEkh8MhHgcqr+0nsBADjngiiJMomPdeb3WeIT4iTKOKcl1LJ9HZsGjJKIwAXESaSzfkDiJCJKIk2j
        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
        gTUg6vZB9Volc6TdAacAkEMYAEba1FcLV0RERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERKT//H83+TO18FeIxQAAAABJRU5ErkJggg==
</value>
  </data>
</root>